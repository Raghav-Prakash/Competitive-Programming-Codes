import java.util.*;
import java.io.*;

class Implementation
{
	private int N;
	private ArrayList<Integer> seqList[];
	private int lastAnswer;

	public Implementation(int N)
	{
		this.N = N;
		seqList = new ArrayList[N];
		this.lastAnswer = 0;

		initialize();
	}

	private void initialize()
	{
		for(int i = 0; i < N; i++)
			seqList[i] = new ArrayList<Integer>();
	}

	public void operation1(int x, int y)
	{
		int seq = (x ^ lastAnswer) % N;
		seqList[seq].add(new Integer(y));
	}

	public int operation2(int x, int y)
	{
		int seq = (x ^ lastAnswer) % N;
		lastAnswer = seqList[seq].get(y % seqList[seq].size());

		return lastAnswer;
	}

}

public class DynamicArray
{
	public static void main(String[] args) throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String sizeAndNumQueries = br.readLine();

		String[] numbers = sizeAndNumQueries.split(" ");

		int size = Integer.parseInt(numbers[0]);
		int numQueries = Integer.parseInt(numbers[1]);

		Implementation obj = new Implementation(size);

		while(numQueries > 0)
		{
			String inputLine = br.readLine();

			int typeQuery = Integer.parseInt(inputLine.split(" ")[0]);
			int x = Integer.parseInt(inputLine.split(" ")[1]);
			int y = Integer.parseInt(inputLine.split(" ")[2]);

			switch(typeQuery)
			{
				case 1:

					obj.operation1(x,y);
					break;

				case 2:

					int lastAnswer = obj.operation2(x,y);
					print(lastAnswer);
					break;
			}

			numQueries--;
		}

	}

	public static void print(int lastAnswer)
	{
		System.out.println(lastAnswer);
	}
}
