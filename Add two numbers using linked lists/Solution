/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution 
{
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) 
    {
        int carry = 0;
        
        ListNode head = null;
        ListNode ptr = head;
        
        int iterCount = 0;
        
        while(l1 != null && l2 != null)
        {
            int sum = carry + l1.val + l2.val;
            iterCount += 1;
            
            if(sum <= 9)
            {
                if(iterCount == 1)
                {
                    head = new ListNode(sum);
                    ptr = head;
                }
                else
                {
                    ListNode currNode = new ListNode(sum);
                    
                    ptr.next = currNode;
                    ptr = currNode;
                    
                    carry = 0;
                }
            }
            else
            {
                int value = sum % 10;
                carry = 1;
                
                if(iterCount == 1)
                {
                    head = new ListNode(value);
                    ptr = head;
                }
                else
                {
                    ListNode currNode = new ListNode(value);
                    
                    ptr.next = currNode;
                    ptr = currNode;
                }
            }
            
            l1 = l1.next;
            l2 = l2.next;
        }
        
        while(l1 != null || l2 != null)
        {
            int sum = -1;
            
            if(l1 == null)
                sum = carry + l2.val;
            else
                sum = carry + l1.val;
            
            if(sum <= 9)
            {
                ListNode currNode = new ListNode(sum);
                    
                ptr.next = currNode;
                ptr = currNode;
                
                carry = 0;
            }
            else
            {
                int value = sum % 10;
                carry = 1;
                
                ListNode currNode = new ListNode(value);
                    
                ptr.next = currNode;
                ptr = currNode;
            }
            
            if(l1 == null)
                l2 = l2.next;
            else
                l1 = l1.next;
        }
        
        if(carry == 1)
        {
            ListNode currNode = new ListNode(carry);
                    
            ptr.next = currNode;
            ptr = currNode;
        }
        
        return head;
    }
}
